<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quick Solves on datacubeR</title>
    <link>/publication/</link>
    <description>Recent content in Quick Solves on datacubeR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> &lt;i class=&#39;fab fa-creative-commons fa-2x&#39;&gt;&lt;/i&gt;&lt;i class=&#39;fab fa-creative-commons-by fa-2x&#39;&gt;&lt;/i&gt;&lt;i class=&#39;fab fa-creative-commons-sa fa-2x&#39;&gt;&lt;/i&gt;&lt;br&gt;&amp;copy;Alfonso Tobar. Made with &lt;i class=&#39;fab fa-r-project&#39;&gt;&lt;/i&gt; Blogdown Package.</copyright>
    <lastBuildDate>Thu, 31 Oct 2019 00:58:18 -0300</lastBuildDate>
    
	<atom:link href="/publication/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Naive Bayes as a Baseline Model</title>
      <link>/publication/problem-11/</link>
      <pubDate>Wed, 19 Aug 2020 00:50:00 +0000</pubDate>
      
      <guid>/publication/problem-11/</guid>
      <description>Naive bayes The other day I had to prepare a class showing the benefits of using Naive Bayes. I have to say this is not a super powerful model, mainly because it makes assumptions that are most of the time not true. Nevertheless, I noticed this can be an excellent way to create a baseline model. It is easy, not very complicated to implement and the best thing is that is super fast.</description>
    </item>
    
    <item>
      <title>Reusable Plotting Functions in Python</title>
      <link>/publication/problem-10/</link>
      <pubDate>Sun, 05 Jul 2020 00:50:00 +0000</pubDate>
      
      <guid>/publication/problem-10/</guid>
      <description>Creating reusable plotting Functions In my new job IÂ´ve noticed they like to explain variables impact into some target in the following way:
Normally we have a natural Rate of an Event happening shown as this TN dashed line. And you have a particular variable that is splitted into Categories showing what is the specific Rate of the Event by Category.
Since this is happening so often, I decided to build a simple function to avoid all the work behind the scenes.</description>
    </item>
    
    <item>
      <title>Calculating Recency using dplyr</title>
      <link>/publication/problem-9/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-9/</guid>
      <description>The ProblemWe have an Intern working on his Thesis Project in our office. He needed to calculate Customer recency, meaning he needed to know the amount of months since the last time the Customer made a Purchase. This was quite intriguing to me because it needs to combine some windows scoped functions with group by and some other things.
This is the problem with the expected solution:</description>
    </item>
    
    <item>
      <title>Dealing with dates</title>
      <link>/publication/problem-7/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-7/</guid>
      <description>The ProblemHere is the challenge:
Calculate the time difference between Max and Min Dates found in a date vector.
library(tidyverse)date_vec &amp;lt;- c(&amp;quot;2019/10/24 10:00:00&amp;quot;,&amp;quot;2019/10/23 11:00:00&amp;quot;,&amp;quot;2019/10/25 12:00:00&amp;quot;) The SolutionThe thing is super easy to get, but the idea is to create a pipeline that can calculate this in just a series of steps:
library(lubridate)date_vec %&amp;gt;%#Transforming characters into dates using ymd for dates and hms for timeymd_hms() %&amp;gt;%#range() retrieves max and min daterange() %&amp;gt;%#Calculate the time differencediff() %&amp;gt;%#Transform into lubridate duration object %&amp;gt;%as.</description>
    </item>
    
    <item>
      <title>Unique Id Challenge</title>
      <link>/publication/problem-8/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-8/</guid>
      <description>The ProblemAnother Twitter Challenge:
#rstats I&amp;#39;m sure there&amp;#39;s an elegant solution that I&amp;#39;m just totally missing. How do I create a unique episode_ID that increases by 1 for instances where episode_flag == &amp;quot;new&amp;quot; but just repeats the value from the row above when episode_flag == &amp;quot;same&amp;quot;? pic.twitter.com/Dl5ZtAiE7J
&amp;mdash; Jessica Streeter (@phillynerd) October 30, 2019  The SolutionIt is almost there, I just added a couple of lines to get the expected output elegantly:</description>
    </item>
    
    <item>
      <title>Transposing a dataframe</title>
      <link>/publication/problem-6/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-6/</guid>
      <description>The ProblemHere is the challenge:
data &amp;lt;- data.frame(&amp;quot;id&amp;quot; = c(901, 902, 903, &amp;quot;age&amp;quot;, &amp;quot;gender&amp;quot;, &amp;quot;language&amp;quot;),&amp;quot;rater1&amp;quot; = c(7, 9, 9, 21, 1, 1),&amp;quot;rater2&amp;quot; = c(9, 9, 9, 39, 2, 2),&amp;quot;rater3&amp;quot; = c(9, 9, 9, 38, 2, 1),&amp;quot;rater4&amp;quot; = c(9, 9, 9, 33, 2, 1),&amp;quot;rater5&amp;quot; = c(2, 9, 9, 21, 2, 1))Filter all the ratings with gender 1, or language 1, or gender 1 AND language 1.</description>
    </item>
    
    <item>
      <title>List Challenge</title>
      <link>/publication/problem-5/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-5/</guid>
      <description>The ProblemThis is simple, If Names of List are found in List B then Replace:
a &amp;lt;- list(x = 1, y = TRUE, z = &amp;quot;a&amp;quot;)b &amp;lt;- list(x = 2, z = &amp;quot;b&amp;quot;)expected &amp;lt;- list(x = 2, y = TRUE, z = &amp;quot;b&amp;quot;)The SolutionIt was hard to think in something simple, because the problem is not as complicated, it is just List is a complicated object to deal with, but I came with this:</description>
    </item>
    
    <item>
      <title>Ugly Untied Dataset</title>
      <link>/publication/problem-4/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-4/</guid>
      <description>Even though the Data looks messy and an Intruitive solution didnÂ´t pop up inmediately, It was relatively short to fix.
The ProblemI want to save some words so Iâ€™ll go to the source
Hey #rstats peeps. I have ~36 tables like this extracted from the LCMM ðŸ“¦ results. I need to tidy it. I want 5 rows with the values for intercept and sofa_study_day in individual columns.</description>
    </item>
    
    <item>
      <title>Missing Value Imputation</title>
      <link>/publication/problem-1/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-1/</guid>
      <description>Surfing at Stack Overflow I noticed a problem that I found interesting to solve:The following Data was presented:
The ProblemThe following Data is presented:
sample &amp;lt;-structure(list(`Country Name` = c(&amp;quot;Aruba&amp;quot;,&amp;quot;Afghanistan&amp;quot;,&amp;quot;Angola&amp;quot;,&amp;quot;Albania&amp;quot;,&amp;quot;Andorra&amp;quot;,&amp;quot;Arab World&amp;quot;,&amp;quot;United Arab Emirates&amp;quot;,&amp;quot;Argentina&amp;quot;,&amp;quot;Armenia&amp;quot;,&amp;quot;American Samoa&amp;quot;,&amp;quot;Antigua and Barbuda&amp;quot;,&amp;quot;Australia&amp;quot;),`Country Code` = c(&amp;quot;ABW&amp;quot;,&amp;quot;AFG&amp;quot;,&amp;quot;AGO&amp;quot;,&amp;quot;ALB&amp;quot;,&amp;quot;AND&amp;quot;,&amp;quot;ARB&amp;quot;,&amp;quot;ARE&amp;quot;,&amp;quot;ARG&amp;quot;,&amp;quot;ARM&amp;quot;,&amp;quot;ASM&amp;quot;,&amp;quot;ATG&amp;quot;,&amp;quot;AUS&amp;quot;),`2007` = c(5.</description>
    </item>
    
    <item>
      <title>Tidy Evaluation</title>
      <link>/publication/problem-2/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-2/</guid>
      <description>Navigating Twitter I found this other Problem:
The ProblemThe following dummy_function is presented:
library(dplyr)#&amp;gt; a &amp;lt;- sample(letters[1:5], 500, rep = TRUE)b &amp;lt;- sample(1:10, 500, rep = TRUE)df1 &amp;lt;- data.frame(a, b)dummy_function &amp;lt;- function(data, var1, var2){# Creating summary statisticsdf &amp;lt;- data %&amp;gt;%group_by(var1, var2) %&amp;gt;%summarise(n=n()) %&amp;gt;%group_by(var1) %&amp;gt;%mutate(perc=100*n/sum(n))df}dummy_function(df1, a, b)#&amp;gt; Error: Column `var1` is unknownCreated by the reprex package (v0.</description>
    </item>
    
    <item>
      <title>Why this is failing?</title>
      <link>/publication/problem-3/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/problem-3/</guid>
      <description>This is a pretty typical issue. Specially when you have dealing with data a long time you just stop seeing obvious things, and you just canÂ´t find solution to inexistant problems. For instance:
mtcars %&amp;gt;%filter(cyl &amp;lt; 4){&#34;columns&#34;:[{&#34;label&#34;:[&#34;mpg&#34;],&#34;name&#34;:[1],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;cyl&#34;],&#34;name&#34;:[2],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;disp&#34;],&#34;name&#34;:[3],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;hp&#34;],&#34;name&#34;:[4],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;drat&#34;],&#34;name&#34;:[5],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;wt&#34;],&#34;name&#34;:[6],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;qsec&#34;],&#34;name&#34;:[7],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;vs&#34;],&#34;name&#34;:[8],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;am&#34;],&#34;name&#34;:[9],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;gear&#34;],&#34;name&#34;:[10],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;carb&#34;],&#34;name&#34;:[11],&#34;type&#34;:[&#34;dbl&#34;],&#34;align&#34;:[&#34;right&#34;]}],&#34;data&#34;:[],&#34;options&#34;:{&#34;columns&#34;:{&#34;min&#34;:{},&#34;max&#34;:[10]},&#34;rows&#34;:{&#34;min&#34;:[10],&#34;max&#34;:[10]},&#34;pages&#34;:{}}}You want to get the rows having cyl less or equal to 4 and for quite a while you keep getting 0 results.Obviously something is wrong with the code but you just canÂ´t notice it.</description>
    </item>
    
  </channel>
</rss>